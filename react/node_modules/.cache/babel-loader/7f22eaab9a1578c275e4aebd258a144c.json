{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenia\\\\Desktop\\\\JScode\\\\1stproject\\\\fullstackexamplemodifying\\\\react\\\\src\\\\Components\\\\Edit\\\\index.js\";\nimport React from 'react';\nimport Form from \"antd/lib/form\";\nimport { Link } from 'react-router-dom'; //import RegistrationForm from '../formdemo';\n\nimport { connect } from 'react-redux';\nimport { saveToUserList, getDetail } from '../../redux/actions';\nimport \"antd/dist/antd.css\"; //import \"./index.css\";\n\nimport { Input, Button } from \"antd\"; //======================================================\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n          var newvalue = {\n            age: values.Age,\n            firstName: values.FirstName,\n            lastName: values.LastName,\n            password: values.password,\n            sex: values.Sex\n          };\n          console.log(newvalue);\n          this.props.saveCreatedUser(newvalue);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator; //const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 6\n        },\n        sm: {\n          span: 33\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 6\n        },\n        sm: {\n          span: 7\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 2,\n          offset: 0\n        },\n        sm: {\n          span: 2,\n          offset: 9\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"First Name\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, getFieldDecorator(\"FirstName\", {\n      rules: [{\n        required: true,\n        message: \"Please input your First Name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      onLoadedData: this.props.userDetail.firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Last Name\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, getFieldDecorator(\"LastName\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Last Name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Sex\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, getFieldDecorator(\"Sex\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Sex!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Age\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, getFieldDecorator(\"Age\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Age!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Confirm Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, getFieldDecorator(\"confirm\", {\n      rules: [{\n        required: true,\n        message: \"Please confirm your password!\"\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"submit\"))), React.createElement(Link, {\n      to: \"/\",\n      style: {\n        margin: 290\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"to home\"));\n  }\n\n} //======================================================\n\n\nclass Edit extends React.Component {\n  render() {\n    //const { input } = this.state;\n    //const { matchedData } = this.props;\n    const WrappedRegistrationForm = Form.create({\n      name: \"register\"\n    })(RegistrationForm); //Home component \n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(WrappedRegistrationForm, {\n      saveCreatedUser: this.props.saveCreatedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    saveuser: state.saveUser,\n    userDetail: state.userDetail\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveCreatedUser: user => {\n      dispatch(saveToUserList(user));\n    },\n    getDetail: user_id => {\n      dispatch(getDetail(user_id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\1stproject\\fullstackexamplemodifying\\react\\src\\Components\\Edit\\index.js"],"names":["React","Form","Link","connect","saveToUserList","getDetail","Input","Button","RegistrationForm","Component","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","newvalue","age","Age","firstName","FirstName","lastName","LastName","password","sex","Sex","saveCreatedUser","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","message","whitespace","userDetail","validator","margin","Edit","WrappedRegistrationForm","create","name","mapStateToProps","saveuser","saveUser","mapDispatchToProps","dispatch","user","user_id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Form from \"antd/lib/form\";\r\nimport {Link} from 'react-router-dom';\r\n//import RegistrationForm from '../formdemo';\r\nimport {connect} from 'react-redux';\r\nimport {saveToUserList, getDetail} from '../../redux/actions';\r\nimport \"antd/dist/antd.css\";\r\n//import \"./index.css\";\r\nimport { Input, Button } from \"antd\";\r\n\r\n//======================================================\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: []\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n        var newvalue = {\r\n          age: values.Age,\r\n          firstName: values.FirstName,\r\n          lastName: values.LastName,\r\n          password: values.password,\r\n          sex: values.Sex\r\n        }\r\n        console.log(newvalue);\r\n        this.props.saveCreatedUser(newvalue);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    //const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 6 },\r\n        sm: { span: 33 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 6 },\r\n        sm: { span: 7 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 2,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 2,\r\n          offset: 9\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n      <Form  {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item \r\n          label={\r\n            <span >\r\n              First Name&nbsp;\r\n            </span>\r\n            \r\n          }\r\n        >\r\n          {getFieldDecorator(\"FirstName\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your First Name!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input onLoadedData = {this.props.userDetail.firstName}/>)}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Last Name&nbsp;\r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator(\"LastName\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Last Name!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label={<span>Sex&nbsp;</span>}>\r\n          {getFieldDecorator(\"Sex\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Sex!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label={<span>Age&nbsp;</span>}>\r\n          {getFieldDecorator(\"Age\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Age!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\"\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword\r\n              }\r\n            ]\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword\r\n              }\r\n            ]\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n            \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              submit\r\n            </Button>\r\n            \r\n        </Form.Item>\r\n        \r\n      </Form>\r\n      <Link to=\"/\" style = {{margin: 290}}>to home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//======================================================\r\n\r\n\r\nclass Edit extends React.Component {\r\n    \r\n    render() {\r\n      //const { input } = this.state;\r\n      //const { matchedData } = this.props;\r\n      const WrappedRegistrationForm = Form.create({ name: \"register\" })(\r\n        RegistrationForm\r\n      );\r\n    \r\n      //Home component \r\n      return(\r\n        <div>\r\n          <h2>Edit</h2>\r\n          <WrappedRegistrationForm saveCreatedUser = {this.props.saveCreatedUser}/>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    saveuser: state.saveUser,\r\n    userDetail: state.userDetail\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      saveCreatedUser: (user) => {\r\n          dispatch(saveToUserList(user));\r\n      },\r\n      getDetail:(user_id) =>{\r\n        dispatch(getDetail(user_id));\r\n      }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}