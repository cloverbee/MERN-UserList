{"ast":null,"code":"import axios from \"axios\";\n\nconst getMatchedRequest = () => {\n  return {\n    type: \"GET_MATCHED_DATA_REQUEST\"\n  };\n};\n\nconst getMatchedSuccess = matchdata => {\n  return {\n    type: \"GET_MATCHED_DATA_SUCCESS\",\n    data: matchdata\n  };\n};\n\nconst getMatchedFail = matcherr => {\n  return {\n    type: \"GET_MATCHED_DATA_FAIL\",\n    error: matcherr\n  };\n}; //===================================================\n\n\nconst deleteUserRequest = () => {\n  return {\n    type: \"DEL_USER_REQUEST\"\n  };\n};\n\nconst deleteUserSuccess = () => {\n  return {\n    type: \"DEL_USER_SUCCESS\" //data: listdata\n\n  };\n};\n\nconst deleteUserFail = err => {\n  return {\n    type: \"DEL_USER_FAIL\",\n    err: err\n  };\n}; //=====================================================\n//=====================================================\n\n\nconst getListRequest = () => {\n  return {\n    type: \"GET_LIST_REQUEST\"\n  };\n};\n\nconst getListSuccess = listdata => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: listdata\n  };\n};\n\nconst getListFail = listerr => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: listerr\n  };\n}; //======================================================\n\n\nconst getDetailRequest = () => {\n  return {\n    type: \"GET_DETAIL_REQUEST\"\n  };\n};\n\nconst getDetailSuccess = detaildata => {\n  return {\n    type: \"GET_DETAIL_SUCCESS\",\n    data: detaildata\n  };\n};\n\nconst getDetailFail = detailerr => {\n  return {\n    type: \"GET_DETAIL_FAIL\",\n    err: detailerr\n  };\n}; //=======================================================\n\n\nexport const getList = () => {\n  return dispatch => {\n    dispatch(getListRequest());\n    axios.get(\"http://localhost:5000/api/list\").then(res => {\n      dispatch(getListSuccess(res.data));\n    }).catch(err => {\n      dispatch(getListFail(err));\n    });\n  };\n};\nexport const delUser = user_id => {\n  return dispatch => {\n    dispatch(deleteUserRequest());\n    axios.delete(\"http://localhost:5000/api/users/:user_id\", {\n      params: {\n        foo: 'bar'\n      }\n    }).then(res => {\n      dispatch(deleteUserSuccess(res.data));\n    }).catch(err => {\n      dispatch(deleteUserFail(err));\n    });\n  };\n};\nexport const getDetail = id => {\n  return dispatch => {\n    dispatch(getDetailRequest());\n    axios.get(\"https://api.github.com/users/\".concat(id)).then(res => {\n      dispatch(getDetailSuccess(res.data));\n    }).catch(err => {\n      dispatch(getDetailFail(err));\n    });\n  };\n}; //====================================================\n\nexport const getMatchedData = matchedText => {\n  return dispatch => {\n    dispatch(getMatchedRequest());\n    axios.post(\"http://localhost:5000/api/search\", {\n      \"seachText\": matchedText\n    }).then(res => {\n      dispatch(getMatchedSuccess(res.data.matchedText));\n    }).catch(err => {\n      dispatch(getMatchedFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\1stproject\\fullstackexamplemodifying\\react\\src\\redux\\actions\\index.js"],"names":["axios","getMatchedRequest","type","getMatchedSuccess","matchdata","data","getMatchedFail","matcherr","error","deleteUserRequest","deleteUserSuccess","deleteUserFail","err","getListRequest","getListSuccess","listdata","getListFail","listerr","getDetailRequest","getDetailSuccess","detaildata","getDetailFail","detailerr","getList","dispatch","get","then","res","catch","delUser","user_id","delete","params","foo","getDetail","id","getMatchedData","matchedText","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst getMatchedRequest = () => {\n  return {\n    type: \"GET_MATCHED_DATA_REQUEST\"\n  };\n};\nconst getMatchedSuccess = (matchdata) => {\n  return {\n    type: \"GET_MATCHED_DATA_SUCCESS\",\n    data: matchdata\n  };\n};\nconst getMatchedFail = (matcherr) => {\n  return {\n    type: \"GET_MATCHED_DATA_FAIL\",\n    error: matcherr\n  }\n};\n//===================================================\nconst deleteUserRequest = () => {\n  return {\n    type: \"DEL_USER_REQUEST\"\n  };\n};\nconst deleteUserSuccess = () => {\n  return {\n    type: \"DEL_USER_SUCCESS\",\n    //data: listdata\n  };\n};\nconst deleteUserFail = (err) => {\n  return {\n    type: \"DEL_USER_FAIL\",\n    err: err\n  };\n}; \n//=====================================================\n\n//=====================================================\nconst getListRequest = () => {\n  return {\n    type: \"GET_LIST_REQUEST\"\n  };\n};\nconst getListSuccess = (listdata) => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: listdata\n  };\n};\nconst getListFail = (listerr) => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: listerr\n  };\n};\n//======================================================\nconst getDetailRequest = () => {\n  return {\n    type: \"GET_DETAIL_REQUEST\"\n  };\n};\nconst getDetailSuccess = (detaildata) => {\n  return {\n    type: \"GET_DETAIL_SUCCESS\",\n    data: detaildata\n  };\n};\nconst getDetailFail = (detailerr) => {\n  return {\n    type: \"GET_DETAIL_FAIL\",\n    err: detailerr\n  };\n};\n//=======================================================\nexport const getList = () => {\n  return (dispatch) => {\n    dispatch(getListRequest());\n    axios.get(\"http://localhost:5000/api/list\")\n      .then(res => {\n        dispatch(getListSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(getListFail(err));\n      });\n  };\n};\n\nexport const delUser = (user_id) => {\n  return (dispatch) => {\n    dispatch(deleteUserRequest());\n    axios.delete(\"http://localhost:5000/api/users/:user_id\", {params: {foo: 'bar'}})\n      .then(res => {\n        dispatch(deleteUserSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(deleteUserFail(err));\n      });\n  };\n};\n\nexport const getDetail = (id) => {\n  return (dispatch) => {\n    dispatch(getDetailRequest());\n    axios.get(`https://api.github.com/users/${id}`)\n      .then(res => {\n        dispatch(getDetailSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(getDetailFail(err));\n      });\n  };\n};\n//====================================================\nexport const getMatchedData = (matchedText) => {\n  return (dispatch) => {\n    dispatch(getMatchedRequest());\n    axios.post(`http://localhost:5000/api/search`, {\n      \"seachText\": matchedText\n    })\n      .then(res => {\n        dispatch(getMatchedSuccess(res.data.matchedText));\n      })\n      .catch(err => {\n        dispatch(getMatchedFail(err));\n      });\n  }\n};"]},"metadata":{},"sourceType":"module"}