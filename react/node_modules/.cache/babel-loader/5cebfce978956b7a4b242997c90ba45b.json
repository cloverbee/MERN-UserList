{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenia\\\\Desktop\\\\JScode\\\\1stproject\\\\fullstackexamplemodifying\\\\react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from 'antd/lib/button';\nimport Table from 'antd/lib/table';\nimport { Form, Input, Tooltip, Icon } from \"antd\"; ////////////////////////\n//import { Divider} from 'antd/lib/divider';\n//import { Tag } from 'antd/lib/tag';\n\nimport './App.css';\nimport * as tabledemo from './tabledemo';\nimport RegistrationForm from './formdemo';\nimport * as actions from \"./redux/actions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      this.setState({\n        input: e.target.value\n      });\n      this.props.getResult(e.target.value);\n    };\n\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  render() {\n    const input = this.state.input;\n    const matchedData = this.props.matchedData;\n    const WrappedRegistrationForm = Form.create({\n      name: \"register\"\n    })(RegistrationForm);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: input,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), matchedData && matchedData.length > 0 && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, matchedData.map((data, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, data);\n    })), React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Button\"), React.createElement(Table, {\n      columns: tabledemo.columns,\n      dataSource: tabledemo.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(WrappedRegistrationForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    matchedData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getResult: searchText => dispatch(actions.getMatchedData(searchText))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\1stproject\\fullstackexamplemodifying\\react\\src\\App.js"],"names":["React","connect","Button","Table","Form","Input","Tooltip","Icon","tabledemo","RegistrationForm","actions","App","Component","constructor","props","handleInput","e","setState","input","target","value","getResult","state","render","matchedData","WrappedRegistrationForm","create","name","length","map","data","index","columns","mapStateToProps","mapDispatchToProps","dispatch","searchText","getMatchedData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAmB,gBAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,IAA/B,QAA0C,MAA1C,C,CAAiD;AACjD;AACA;;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,aAA3B;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AAGA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;AAEA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,WALmB,GAKLC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACA,WAAKN,KAAL,CAAWO,SAAX,CAAqBL,CAAC,CAACG,MAAF,CAASC,KAA9B;AACD,KARkB;;AAEjB,SAAKE,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AACD;;AAODK,EAAAA,MAAM,GAAG;AAAA,UACCL,KADD,GACW,KAAKI,KADhB,CACCJ,KADD;AAAA,UAECM,WAFD,GAEiB,KAAKV,KAFtB,CAECU,WAFD;AAGP,UAAMC,uBAAuB,GAAGrB,IAAI,CAACsB,MAAL,CAAY;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAZ,EAC9BlB,gBAD8B,CAAhC;AAKA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAES,KAAd;AAAqB,MAAA,QAAQ,EAAE,KAAKH,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGS,WAAW,IAAIA,WAAW,CAACI,MAAZ,GAAqB,CAApC,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,WAAW,CAACK,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,IAAjB,CAAP;AACD,KAFA,CADH,CAHJ,EAUE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,EAWI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEtB,SAAS,CAACwB,OAA1B;AAAmC,MAAA,UAAU,EAAExB,SAAS,CAACsB,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAkBD;;AArC+B;;AAwClC,MAAMG,eAAe,GAAGX,KAAK,IAAI;AAC/B,SAAO;AACLE,IAAAA,WAAW,EAAEF,KAAK,CAACQ;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,SAAS,EAAEe,UAAU,IAAID,QAAQ,CAACzB,OAAO,CAAC2B,cAAR,CAAuBD,UAAvB,CAAD;AAD5B,GAAP;AAGD,CAJD;;AAOA,eAAenC,OAAO,CAACgC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from 'antd/lib/button';\nimport Table  from 'antd/lib/table';\nimport { Form, Input, Tooltip, Icon} from \"antd\";////////////////////////\n//import { Divider} from 'antd/lib/divider';\n//import { Tag } from 'antd/lib/tag';\nimport './App.css';\nimport * as tabledemo from './tabledemo';\nimport RegistrationForm from './formdemo';\n\n\nimport * as actions from \"./redux/actions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" }; \n  }\n\n  handleInput = e => {\n    this.setState({ input: e.target.value });\n    this.props.getResult(e.target.value);\n  };\n\n  render() {\n    const { input } = this.state;\n    const { matchedData } = this.props;\n    const WrappedRegistrationForm = Form.create({ name: \"register\" })(\n      RegistrationForm\n    );\n\n\n    return (\n      <div>\n        <input value={input} onChange={this.handleInput}/>\n        {matchedData && matchedData.length > 0 && \n          <ul>\n            {matchedData.map((data, index) => {\n              return <li key={index}>{data}</li>\n            })}\n          </ul>\n        }\n\n        <Button type=\"primary\">Button</Button>\n          <Table columns={tabledemo.columns} dataSource={tabledemo.data} ></Table>\n        <WrappedRegistrationForm />\n\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    matchedData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getResult: searchText => dispatch(actions.getMatchedData(searchText))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}