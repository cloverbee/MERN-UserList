{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenia\\\\Desktop\\\\JScode\\\\1stproject\\\\fullstackexamplemodifying\\\\react\\\\src\\\\Components\\\\Create\\\\index.js\";\nimport React from 'react';\nimport Form from \"antd/lib/form\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { saveToUserList } from '../../redux/actions';\nimport \"antd/dist/antd.css\"; //import \"./index.css\";\n\nimport { Input, Button } from \"antd\"; //======================================================\n\nclass RegistrationForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          //console.log(\"Received values of form: \", values);\n          var newvalue = {\n            age: values.Age,\n            firstName: values.FirstName,\n            lastName: values.LastName,\n            password: values.password,\n            sex: values.Sex //console.log(newvalue);\n\n          };\n          this.props.saveCreatedUser(newvalue, this.props.skipToHome); //window.location = '/';\n\n          console.log('Location');\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    };\n\n    this.validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator; //const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 6\n        },\n        sm: {\n          span: 33\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 6\n        },\n        sm: {\n          span: 7\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 2,\n          offset: 0\n        },\n        sm: {\n          span: 13,\n          offset: 12\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"First Name\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, getFieldDecorator(\"FirstName\", {\n      rules: [{\n        required: true,\n        message: \"Please input your First Name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Last Name\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, getFieldDecorator(\"LastName\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Last Name!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Sex\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, getFieldDecorator(\"Sex\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Sex!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Age\\xA0\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, getFieldDecorator(\"Age\", {\n      rules: [{\n        required: true,\n        message: \"Please input your Age!\",\n        whitespace: true\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Confirm Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, getFieldDecorator(\"confirm\", {\n      rules: [{\n        required: true,\n        message: \"Please confirm your password!\"\n      }, {\n        validator: this.compareToFirstPassword\n      }]\n    })(React.createElement(Input.Password, {\n      onBlur: this.handleConfirmBlur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"submit\"))), React.createElement(Link, {\n      to: \"/\",\n      style: {\n        align: Button\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"to home\"));\n  }\n\n} //const FormWithRouter = withRouter(RegistrationForm);\n//======================================================\n\n\nclass Create extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fucntion1 = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    //const { input } = this.state;\n    //const { matchedData } = this.props;\n    const WrappedRegistrationForm = Form.create({\n      name: \"register\"\n    })(RegistrationForm); //const FormWithRouter = withRouter(WrappedRegistrationForm);\n    //this.props.history.push('/');\n    //Home component \n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Create\"), React.createElement(WrappedRegistrationForm, {\n      saveCreatedUser: this.props.saveCreatedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }));\n  } //render\n\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    saveuser: state.saveUser\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveCreatedUser: user => {\n      dispatch(saveToUserList(user));\n    }\n  };\n}; //const CreateWithRouter = withRouter(Create);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\1stproject\\fullstackexamplemodifying\\react\\src\\Components\\Create\\index.js"],"names":["React","Form","Link","connect","saveToUserList","Input","Button","RegistrationForm","Component","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","newvalue","age","Age","firstName","FirstName","lastName","LastName","password","sex","Sex","saveCreatedUser","skipToHome","console","log","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","message","whitespace","validator","align","Create","fucntion1","history","push","WrappedRegistrationForm","create","name","mapStateToProps","saveuser","saveUser","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AACA,OAAO,oBAAP,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B,C,CAEA;;AACA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC7CC,KAD6C,GACrC;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,kBAAkB,EAAE;AAFd,KADqC;;AAAA,SAM7CC,YAN6C,GAM9BC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,uBAAhB,CAAwC,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACvD,YAAI,CAACD,GAAL,EAAU;AACR;AACA,cAAIE,QAAQ,GAAG;AACbC,YAAAA,GAAG,EAAEF,MAAM,CAACG,GADC;AAEbC,YAAAA,SAAS,EAAEJ,MAAM,CAACK,SAFL;AAGbC,YAAAA,QAAQ,EAAEN,MAAM,CAACO,QAHJ;AAIbC,YAAAA,QAAQ,EAAER,MAAM,CAACQ,QAJJ;AAKbC,YAAAA,GAAG,EAAET,MAAM,CAACU,GALC,CAOf;;AAPe,WAAf;AAQA,eAAKd,KAAL,CAAWe,eAAX,CAA2BV,QAA3B,EAAqC,KAAKL,KAAL,CAAWgB,UAAhD,EAVQ,CAWR;;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;AACF,OAfD;AAgBD,KAxB4C;;AAAA,SA0B7CC,iBA1B6C,GA0BzBrB,CAAC,IAAI;AACvB,YAAMsB,KAAK,GAAGtB,CAAC,CAACuB,MAAF,CAASD,KAAvB;AACA,WAAKE,QAAL,CAAc;AAAE3B,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,IAA2B,CAAC,CAACyB;AAA7C,OAAd;AACD,KA7B4C;;AAAA,SA+B7CG,sBA/B6C,GA+BpB,CAACC,IAAD,EAAOJ,KAAP,EAAcK,QAAd,KAA2B;AAClD,YAAMxB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAImB,KAAK,IAAIA,KAAK,KAAKnB,IAAI,CAACyB,aAAL,CAAmB,UAAnB,CAAvB,EAAuD;AACrDD,QAAAA,QAAQ,CAAC,+CAAD,CAAR;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ;AACT;AACF,KAtC4C;;AAAA,SAwC7CE,sBAxC6C,GAwCpB,CAACH,IAAD,EAAOJ,KAAP,EAAcK,QAAd,KAA2B;AAClD,YAAMxB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;;AACA,UAAImB,KAAK,IAAI,KAAK1B,KAAL,CAAWC,YAAxB,EAAsC;AACpCM,QAAAA,IAAI,CAAC2B,cAAL,CAAoB,CAAC,SAAD,CAApB,EAAiC;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAjC;AACD;;AACDJ,MAAAA,QAAQ;AACT,KA9C4C;AAAA;;AAgD7CK,EAAAA,MAAM,GAAG;AAAA,UACCC,iBADD,GACuB,KAAK/B,KAAL,CAAWC,IADlC,CACC8B,iBADD,EAEP;;AAEA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADI;AAERC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFI,OADW;AAKrBE,MAAAA,UAAU,EAAE;AACVH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFM;AALS,KAAvB;AAUA,UAAMG,kBAAkB,GAAG;AACzBD,MAAAA,UAAU,EAAE;AACVH,QAAAA,EAAE,EAAE;AACFC,UAAAA,IAAI,EAAE,CADJ;AAEFI,UAAAA,MAAM,EAAE;AAFN,SADM;AAKVH,QAAAA,EAAE,EAAE;AACFD,UAAAA,IAAI,EAAE,EADJ;AAEFI,UAAAA,MAAM,EAAE;AAFN;AALM;AADa,KAA3B;AAaA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,oBAAWP,cAAX;AAA2B,MAAA,QAAQ,EAAE,KAAKnC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGkC,iBAAiB,CAAC,WAAD,EAAc;AAC9BS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE,+BAFX;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADK;AADuB,KAAd,CAAjB,CAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CARH,CADF,EAoBE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGZ,iBAAiB,CAAC,UAAD,EAAa;AAC7BS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE,8BAFX;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADK;AADsB,KAAb,CAAjB,CAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAPH,CApBF,EAsCE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,iBAAiB,CAAC,KAAD,EAAQ;AACxBS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE,wBAFX;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADK;AADiB,KAAR,CAAjB,CAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADH,CAtCF,EAkDE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,iBAAiB,CAAC,KAAD,EAAQ;AACxBS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE,wBAFX;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADK;AADiB,KAAR,CAAjB,CAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADH,CAlDF,EA8DE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAA4B,MAAA,WAAW,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,iBAAiB,CAAC,UAAD,EAAa;AAC7BS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACEE,QAAAA,SAAS,EAAE,KAAKjB;AADlB,OALK;AADsB,KAAb,CAAjB,CAUE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADH,CA9DF,EA2EE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,kBAAjB;AAAoC,MAAA,WAAW,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,iBAAiB,CAAC,SAAD,EAAY;AAC5BS,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,EAKL;AACEE,QAAAA,SAAS,EAAE,KAAKrB;AADlB,OALK;AADqB,KAAZ,CAAjB,CAUE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,MAAM,EAAE,KAAKJ,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADH,CA3EF,EAyFE,oBAAC,IAAD,CAAM,IAAN,oBAAemB,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAEI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAzFF,CADA,EAmGA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,KAAK,EAAI;AAACO,QAAAA,KAAK,EAAEtD;AAAR,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAnGA,CADF;AAuGD;;AAlL4C,C,CAoL/C;AACA;;;AAGA,MAAMuD,MAAN,SAAqB7D,KAAK,CAACQ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACjCsD,SADiC,GACrB,MAAM;AAChB,WAAK/C,KAAL,CAAWgD,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KAHgC;AAAA;;AAIjCnB,EAAAA,MAAM,GAAG;AACP;AACA;AACA,UAAMoB,uBAAuB,GAAGhE,IAAI,CAACiE,MAAL,CAAY;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAZ,EAC9B5D,gBAD8B,CAAhC,CAHO,CAOP;AACA;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,uBAAD;AAAyB,MAAA,eAAe,EAAI,KAAKQ,KAAL,CAAWe,eAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GApBgC,CAoBhC;;;AApBgC;;AAuBrC,MAAMsC,eAAe,GAAG3D,KAAK,IAAI;AAC/B,SAAO;AACL4D,IAAAA,QAAQ,EAAE5D,KAAK,CAAC6D;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACH1C,IAAAA,eAAe,EAAG2C,IAAD,IAAU;AACvBD,MAAAA,QAAQ,CAACpE,cAAc,CAACqE,IAAD,CAAf,CAAR;AACH;AAHE,GAAP;AAKD,CAND,C,CAQA;;;AACA,eAAetE,OAAO,CAACiE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,MAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Form from \"antd/lib/form\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {saveToUserList} from '../../redux/actions';\r\nimport \"antd/dist/antd.css\";\r\n//import \"./index.css\";\r\nimport { Input, Button } from \"antd\";\r\n\r\n//======================================================\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: []\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        //console.log(\"Received values of form: \", values);\r\n        var newvalue = {\r\n          age: values.Age,\r\n          firstName: values.FirstName,\r\n          lastName: values.LastName,\r\n          password: values.password,\r\n          sex: values.Sex\r\n        }\r\n        //console.log(newvalue);\r\n        this.props.saveCreatedUser(newvalue, this.props.skipToHome);\r\n        //window.location = '/';\r\n        console.log('Location');\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Two passwords that you enter is inconsistent!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    //const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 6 },\r\n        sm: { span: 33 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 6 },\r\n        sm: { span: 7 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 2,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 13,\r\n          offset: 12\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n      <Form  {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item \r\n          label={\r\n            <span >\r\n              First Name&nbsp;\r\n            </span>\r\n            \r\n          }\r\n        >\r\n          {getFieldDecorator(\"FirstName\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your First Name!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Last Name&nbsp;\r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator(\"LastName\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Last Name!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label={<span>Sex&nbsp;</span>}>\r\n          {getFieldDecorator(\"Sex\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Sex!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label={<span>Age&nbsp;</span>}>\r\n          {getFieldDecorator(\"Age\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your Age!\",\r\n                whitespace: true\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input your password!\"\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword\r\n              }\r\n            ]\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator(\"confirm\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\"\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword\r\n              }\r\n            ]\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n            \r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              submit\r\n            </Button>\r\n            \r\n        </Form.Item>\r\n        \r\n      </Form>\r\n      <Link to=\"/\" style = {{align: Button}}>to home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//const FormWithRouter = withRouter(RegistrationForm);\r\n//======================================================\r\n\r\n\r\nclass Create extends React.Component {\r\n    fucntion1 = () => {\r\n      this.props.history.push('/');\r\n    };\r\n    render() {\r\n      //const { input } = this.state;\r\n      //const { matchedData } = this.props;\r\n      const WrappedRegistrationForm = Form.create({ name: \"register\" })(\r\n        RegistrationForm\r\n      );\r\n    \r\n      //const FormWithRouter = withRouter(WrappedRegistrationForm);\r\n      //this.props.history.push('/');\r\n      //Home component \r\n      return(\r\n        <div>\r\n          <h2>Create</h2>\r\n          <WrappedRegistrationForm saveCreatedUser = {this.props.saveCreatedUser} />{/*skipToHome = {this.props.history.push('/')}/>*/}\r\n        </div>\r\n      );\r\n    }//render\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    saveuser: state.saveUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      saveCreatedUser: (user) => {\r\n          dispatch(saveToUserList(user));\r\n      }\r\n  };\r\n};\r\n\r\n//const CreateWithRouter = withRouter(Create);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);"]},"metadata":{},"sourceType":"module"}