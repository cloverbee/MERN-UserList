{"ast":null,"code":"import axios from \"axios\";\n\nconst getMatchedRequest = () => {\n  return {\n    type: \"GET_MATCHED_DATA_REQUEST\"\n  };\n};\n\nconst getMatchedSuccess = matchdata => {\n  return {\n    type: \"GET_MATCHED_DATA_SUCCESS\",\n    data: matchdata\n  };\n};\n\nconst getMatchedFail = err => {\n  return {\n    type: \"GET_MATCHED_DATA_FAIL\",\n    error: err\n  };\n}; //====================================================\n\n\nconst getListRequest = () => {\n  return {\n    type: \"GET_LIST_REQUEST\"\n  };\n};\n\nconst getListSuccess = data => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: data\n  };\n};\n\nconst getListFail = err => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: err\n  };\n};\n\nconst getDetailRequest = () => {\n  return {\n    type: \"GET_DETAIL_REQUEST\"\n  };\n};\n\nconst getDetailSuccess = data => {\n  return {\n    type: \"GET_DETAIL_SUCCESS\",\n    data: data\n  };\n};\n\nconst getDetailFail = err => {\n  return {\n    type: \"GET_DETAIL_FAIL\",\n    err: err\n  };\n};\n\nexport const getList = () => {\n  return dispatch => {\n    dispatch(getListRequest());\n    axios.get(\"https://api.github.com/users?per_page=100\").then(res => {\n      dispatch(getListSuccess(res.data));\n    }).catch(err => {\n      dispatch(getListFail(err));\n    });\n  };\n};\nexport const getDetail = id => {\n  return dispatch => {\n    dispatch(getDetailRequest());\n    axios.get(\"https://api.github.com/users/\".concat(id)).then(res => {\n      dispatch(getDetailSuccess(res.data));\n    }).catch(err => {\n      dispatch(getDetailFail(err));\n    });\n  };\n}; //====================================================\n\nexport const getMatchedData = matchedText => {\n  return dispatch => {\n    dispatch(getMatchedRequest());\n    axios.post(\"http://localhost:5000/api/search\", {\n      \"seachText\": matchedText\n    }).then(res => {\n      dispatch(getMatchedSuccess(res.data.matchedText));\n    }).catch(err => {\n      dispatch(getMatchedFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\1stproject\\fullstackexamplemodifying\\react\\src\\redux\\actions\\index.js"],"names":["axios","getMatchedRequest","type","getMatchedSuccess","matchdata","data","getMatchedFail","err","error","getListRequest","getListSuccess","getListFail","getDetailRequest","getDetailSuccess","getDetailFail","getList","dispatch","get","then","res","catch","getDetail","id","getMatchedData","matchedText","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst getMatchedRequest = () => {\n  return {\n    type: \"GET_MATCHED_DATA_REQUEST\"\n  };\n};\nconst getMatchedSuccess = (matchdata) => {\n  return {\n    type: \"GET_MATCHED_DATA_SUCCESS\",\n    data: matchdata\n  };\n};\nconst getMatchedFail = (err) => {\n  return {\n    type: \"GET_MATCHED_DATA_FAIL\",\n    error: err\n  }\n};\n//====================================================\nconst getListRequest = () => {\n  return {\n    type: \"GET_LIST_REQUEST\"\n  };\n};\nconst getListSuccess = (data) => {\n  return {\n    type: \"GET_LIST_SUCCESS\",\n    data: data\n  };\n};\nconst getListFail = (err) => {\n  return {\n    type: \"GET_LIST_FAIL\",\n    err: err\n  };\n};\n\nconst getDetailRequest = () => {\n  return {\n    type: \"GET_DETAIL_REQUEST\"\n  };\n};\nconst getDetailSuccess = (data) => {\n  return {\n    type: \"GET_DETAIL_SUCCESS\",\n    data: data\n  };\n};\nconst getDetailFail = (err) => {\n  return {\n    type: \"GET_DETAIL_FAIL\",\n    err: err\n  };\n};\n\nexport const getList = () => {\n  return (dispatch) => {\n    dispatch(getListRequest());\n    axios.get(\"https://api.github.com/users?per_page=100\")\n      .then(res => {\n        dispatch(getListSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(getListFail(err));\n      });\n  };\n};\n\nexport const getDetail = (id) => {\n  return (dispatch) => {\n    dispatch(getDetailRequest());\n    axios.get(`https://api.github.com/users/${id}`)\n      .then(res => {\n        dispatch(getDetailSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(getDetailFail(err));\n      });\n  };\n};\n//====================================================\nexport const getMatchedData = (matchedText) => {\n  return (dispatch) => {\n    dispatch(getMatchedRequest());\n    axios.post(`http://localhost:5000/api/search`, {\n      \"seachText\": matchedText\n    })\n      .then(res => {\n        dispatch(getMatchedSuccess(res.data.matchedText));\n      })\n      .catch(err => {\n        dispatch(getMatchedFail(err));\n      });\n  }\n};"]},"metadata":{},"sourceType":"module"}