{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenia\\\\Desktop\\\\JScode\\\\1stproject\\\\fullstackexamplemodifying\\\\react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { getList, getDetail } from \"./redux/actions\";\nimport { Form, Input, Tooltip, Icon } from \"antd\"; ////////////////////////\n//import { Divider} from 'antd/lib/divider';\n//import { Tag } from 'antd/lib/tag';\n\nimport './App.css';\nimport Home from './Components/Home';\nimport Creat from './Components/Creat';\nimport Edit from './Components/Edit';\nimport axios from \"axios\";\nimport * as actions from \"./redux/actions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callApi = async () => {\n      const response = await this.props.getUserList(); //fetch('/api/hello');\n\n      /*const body = await response.json();\n         if (response.status !== 200) throw Error(body.message);\n         return body;*/\n\n      console.log('response', response);\n    };\n\n    this.state = {\n      input: \"\"\n    };\n  } //componentDidMount() {\n\n\n  componentWillMount() {\n    //console.log('initial get list',this.props.userList);\n    //this.props.getUserList();\n    // dispatch(getListRequest());\n    axios.get(\"http://localhost:5000/api/list\").then(res => {\n      dispatch(getListSuccess(res.data));\n    }).catch(err => {\n      dispatch(getListFail(err));\n    });\n    console.log('initial get list', this.props.userList);\n    /*this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err)); */\n  }\n\n  ////////////////////////////////////////////\n  render() {\n    const _this$props = this.props,\n          userList = _this$props.userList,\n          userDetail = _this$props.userDetail,\n          getUserDetail = _this$props.getUserDetail; //const { input } = this.state;\n    //const { matchedData } = this.props;\n    //Home component defintion\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/creat\",\n      component: Creat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/edit\",\n      component: Edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(Home, {\n      userList: this.props.userList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.list,\n    userDetail: state.detail,\n    matchedData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserList: () => {\n      dispatch(getList());\n    },\n    getUserDetail: id => {\n      dispatch(getDetail(id));\n    },\n    getResult: searchText => dispatch(actions.getMatchedData(searchText))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\1stproject\\fullstackexamplemodifying\\react\\src\\App.js"],"names":["React","connect","BrowserRouter","Route","Switch","getList","getDetail","Form","Input","Tooltip","Icon","Home","Creat","Edit","axios","actions","App","Component","constructor","props","callApi","response","getUserList","console","log","state","input","componentWillMount","get","then","res","dispatch","getListSuccess","data","catch","err","getListFail","userList","render","userDetail","getUserDetail","mapStateToProps","list","detail","matchedData","mapDispatchToProps","id","getResult","searchText","getMatchedData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,iBAAnC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,IAA/B,QAA0C,MAA1C,C,CAAiD;AACjD;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;AAGA,MAAMC,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,OAtBmB,GAsBT,YAAY;AACpB,YAAMC,QAAQ,GAAG,MAAM,KAAKF,KAAL,CAAWG,WAAX,EAAvB,CADoB,CAC4B;;AAChD;;;;AAKAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACD,KA9BkB;;AAEjB,SAAKI,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACD,GAL6B,CAM9B;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB;AACA;AACD;AACCb,IAAAA,KAAK,CAACc,GAAN,CAAU,gCAAV,EACGC,IADH,CACQC,GAAG,IAAI;AACXC,MAAAA,QAAQ,CAACC,cAAc,CAACF,GAAG,CAACG,IAAL,CAAf,CAAR;AACD,KAHH,EAIGC,KAJH,CAISC,GAAG,IAAI;AACZJ,MAAAA,QAAQ,CAACK,WAAW,CAACD,GAAD,CAAZ,CAAR;AACD,KANH;AAOAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+B,KAAKL,KAAL,CAAWkB,QAA1C;AACA;;;AAGD;;AAUC;AAGFC,EAAAA,MAAM,GAAG;AAAA,wBACyC,KAAKnB,KAD9C;AAAA,UACCkB,QADD,eACCA,QADD;AAAA,UACWE,UADX,eACWA,UADX;AAAA,UACuBC,aADvB,eACuBA,aADvB,EAEP;AACA;AACA;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAI,IAAhB;AAAsB,MAAA,IAAI,EAAC,GAA3B;AAA+B,MAAA,SAAS,EAAE7B,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAI,IAAhB;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,SAAS,EAAEC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAI,IAAhB;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,SAAS,EAAEC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADJ,CADA,EAQA,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAI,KAAKM,KAAL,CAAWkB,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,CADF;AAYH;;AApD+B;;AAuDlC,MAAMI,eAAe,GAAGhB,KAAK,IAAI;AAC/B,SAAO;AACLY,IAAAA,QAAQ,EAAEZ,KAAK,CAACiB,IADX;AAELH,IAAAA,UAAU,EAAEd,KAAK,CAACkB,MAFb;AAGLC,IAAAA,WAAW,EAAEnB,KAAK,CAACQ;AAHd,GAAP;AAKD,CAND;;AAQA,MAAMY,kBAAkB,GAAGd,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,WAAW,EAAE,MAAM;AACjBS,MAAAA,QAAQ,CAAC1B,OAAO,EAAR,CAAR;AACD,KAHI;AAILmC,IAAAA,aAAa,EAAGM,EAAD,IAAQ;AACrBf,MAAAA,QAAQ,CAACzB,SAAS,CAACwC,EAAD,CAAV,CAAR;AACD,KANI;AAOLC,IAAAA,SAAS,EAAEC,UAAU,IAAIjB,QAAQ,CAAChB,OAAO,CAACkC,cAAR,CAAuBD,UAAvB,CAAD;AAP5B,GAAP;AASD,CAVD;;AAaA,eAAe/C,OAAO,CAACwC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C7B,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { getList, getDetail } from \"./redux/actions\";\nimport { Form, Input, Tooltip, Icon} from \"antd\";////////////////////////\n//import { Divider} from 'antd/lib/divider';\n//import { Tag } from 'antd/lib/tag';\nimport './App.css';\nimport Home from './Components/Home';\nimport Creat from './Components/Creat';\nimport Edit from './Components/Edit';\nimport axios from \"axios\";\n\n\nimport * as actions from \"./redux/actions\";\n\n\nclass App extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      this.state = { input: \"\" }; \n    }\n    //componentDidMount() {\n    componentWillMount() {\n      //console.log('initial get list',this.props.userList);\n      //this.props.getUserList();\n     // dispatch(getListRequest());\n      axios.get(\"http://localhost:5000/api/list\")\n        .then(res => {\n          dispatch(getListSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(getListFail(err));\n        });\n      console.log('initial get list',this.props.userList);\n      /*this.callApi()\n        .then(res => this.setState({ response: res.express }))\n        .catch(err => console.log(err)); */\n    }\n    \n    callApi = async () => {\n      const response = await this.props.getUserList();//fetch('/api/hello');\n      /*const body = await response.json();\n  \n      if (response.status !== 200) throw Error(body.message);\n  \n      return body;*/\n      console.log('response', response);\n    };////////////////////////////////////////////\n\n\n    render() {\n      const { userList, userDetail, getUserDetail } = this.props;\n      //const { input } = this.state;\n      //const { matchedData } = this.props;\n      //Home component defintion\n      return (\n        <div>\n        <BrowserRouter>\n            <Switch>\n              <Route exact = {true} path=\"/\" component={Home} />\n              <Route exact = {true} path=\"/creat\" component={Creat} />\n              <Route exact = {true} path=\"/edit\" component={Edit} />\n            </Switch>\n        </BrowserRouter>\n        <Home userList = {this.props.userList}/>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userList: state.list,\n    userDetail: state.detail,\n    matchedData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUserList: () => {\n      dispatch(getList());\n    },\n    getUserDetail: (id) => {\n      dispatch(getDetail(id));\n    },\n    getResult: searchText => dispatch(actions.getMatchedData(searchText))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}