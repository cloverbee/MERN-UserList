{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xenia\\\\Desktop\\\\JScode\\\\08fullstackexample\\\\react\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./redux/actions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      this.setState({\n        input: e.target.value\n      });\n      this.props.getResult(e.target.value);\n    };\n\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  render() {\n    const input = this.state.input;\n    const matchedData = this.props.matchedData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: input,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), matchedData && matchedData.length > 0 && React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, matchedData.map((data, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, data);\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    matchedData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getResult: searchText => dispatch(actions.getMatchedData(searchText))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\xenia\\Desktop\\JScode\\08fullstackexample\\react\\src\\App.js"],"names":["React","connect","actions","App","Component","constructor","props","handleInput","e","setState","input","target","value","getResult","state","render","matchedData","length","map","data","index","mapStateToProps","mapDispatchToProps","dispatch","searchText","getMatchedData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,WALmB,GAKLC,CAAC,IAAI;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACA,WAAKN,KAAL,CAAWO,SAAX,CAAqBL,CAAC,CAACG,MAAF,CAASC,KAA9B;AACD,KARkB;;AAEjB,SAAKE,KAAL,GAAa;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAAb;AACD;;AAODK,EAAAA,MAAM,GAAG;AAAA,UACCL,KADD,GACW,KAAKI,KADhB,CACCJ,KADD;AAAA,UAECM,WAFD,GAEiB,KAAKV,KAFtB,CAECU,WAFD;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAEN,KAAd;AAAqB,MAAA,QAAQ,EAAE,KAAKH,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGS,WAAW,IAAIA,WAAW,CAACC,MAAZ,GAAqB,CAApC,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,WAAW,CAACE,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,IAAjB,CAAP;AACD,KAFA,CADH,CAHJ,CADF;AAYD;;AA1B+B;;AA6BlC,MAAME,eAAe,GAAGP,KAAK,IAAI;AAC/B,SAAO;AACLE,IAAAA,WAAW,EAAEF,KAAK,CAACK;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,SAAS,EAAEW,UAAU,IAAID,QAAQ,CAACrB,OAAO,CAACuB,cAAR,CAAuBD,UAAvB,CAAD;AAD5B,GAAP;AAGD,CAJD;;AAOA,eAAevB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,GAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"./redux/actions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { input: \"\" }; \n  }\n\n  handleInput = e => {\n    this.setState({ input: e.target.value });\n    this.props.getResult(e.target.value);\n  };\n\n  render() {\n    const { input } = this.state;\n    const { matchedData } = this.props;\n    return (\n      <div>\n        <input value={input} onChange={this.handleInput}/>\n        {matchedData && matchedData.length > 0 && \n          <ul>\n            {matchedData.map((data, index) => {\n              return <li key={index}>{data}</li>\n            })}\n          </ul>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    matchedData: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getResult: searchText => dispatch(actions.getMatchedData(searchText))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}